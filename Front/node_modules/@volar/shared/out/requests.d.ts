import type * as vscode from 'vscode-languageserver';
/**
 * Client Requests
 */
export declare namespace GetDocumentContentRequest {
    const type: vscode.RequestType<string, string, any>;
}
export declare namespace GetDocumentVersionRequest {
    const type: vscode.RequestType<{
        uri: string;
    }, number | undefined, any>;
}
export declare namespace ShowReferencesNotification {
    const type: vscode.NotificationType<{
        uri: vscode.DocumentUri;
        position: vscode.Position;
        references: vscode.Location[];
    }>;
}
export declare namespace GetDocumentNameCasesRequest {
    const type: vscode.RequestType<vscode.TextDocumentIdentifier, {
        tagNameCase: 'both' | 'kebabCase' | 'pascalCase';
        attrNameCase: 'kebabCase' | 'pascalCase';
    }, any>;
}
export declare namespace GetDocumentSelectionRequest {
    const type: vscode.RequestType0<{
        uri: string;
        offset: number;
    } | undefined, any>;
}
/**
 * Server Requests
 */
export declare namespace PingRequest {
    const type: vscode.RequestType0<'pong' | null | undefined, any>;
}
export declare namespace D3Request {
    const type: vscode.RequestType<vscode.TextDocumentIdentifier, string | null | undefined, any>;
}
export declare namespace GetTagCloseEditsRequest {
    const type: vscode.RequestType<vscode.TextDocumentPositionParams, string | null | undefined, any>;
}
export declare namespace GetRefCompleteEditsRequest {
    const type: vscode.RequestType<vscode.TextDocumentPositionParams, string | null | undefined, any>;
}
export declare namespace VerifyAllScriptsRequest {
    const type: vscode.RequestType<undefined, undefined, any>;
}
export declare namespace WriteVirtualFilesRequest {
    const type: vscode.RequestType<{
        lsType: 'template' | 'script';
    }, undefined, any>;
}
export declare namespace RestartServerNotification {
    const type: vscode.NotificationType<{
        serverPath: string;
        localizedPath: string | undefined;
    } | undefined>;
}
export declare namespace DetectDocumentNameCasesRequest {
    const type: vscode.RequestType<vscode.TextDocumentIdentifier, {
        tag: 'both' | 'kebabCase' | 'pascalCase' | 'unsure';
        attr: 'both' | 'kebabCase' | 'pascalCase' | 'unsure';
    } | null | undefined, any>;
}
export declare namespace RemoveAllRefSugars {
    const type: vscode.NotificationType<undefined>;
}
